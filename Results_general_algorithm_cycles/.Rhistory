library(tidyverse)
library(ggpubr)
library(rstatix)
library(datarium)
getwd()
setwd("/home/carmen/PycharmProjects/EnsemblesComplexity/Results_general_algorithm_cycles")
#datos <- read.csv('TotalAggregatedResults_ParameterConfiguration_CDB.csv')
# Cargamos los datos ya agregados por medida de complejidad porque si no peta
datos <- read.csv('df_summary_data.csv')
str(datos)
# Convert id and time into factor variables
datos <- datos %>%
convert_as_factor(Dataset, combo_alpha_split, n_cycle,n_ensemble)
datos_alpha_split <- datos %>% group_by(Dataset, alpha, split) %>%  # Agrupar por las demás variables
summarise(accuracy_mean_mean = mean(accuracy_mean_mean)) %>% ungroup()
datos_alpha_split<- as.data.frame(datos_alpha_split)
datos_alpha_split$split <- as.factor(datos_alpha_split$split)
datos_alpha_split$Dataset <- as.factor(datos_alpha_split$Dataset)
str(datos_alpha_split)
datos_alpha_split$alpha <- as.factor(datos_alpha_split$alpha)
str(datos_alpha_split)
# Friedman test
friedman.test(accuracy_mean_mean ~ split |Dataset,as.matrix(datos_alpha_split))
View(datos_alpha_split)
# Friedman test
friedman.test(accuracy_mean_mean ~ split |Dataset,datos_alpha_split)
df %>%
group_by(Dataset, alpha, split) %>%
summarise(n = n())
datos_alpha_split %>%
group_by(Dataset, alpha, split) %>%
summarise(n = n())
aa = datos_alpha_split %>%
group_by(Dataset, alpha, split) %>%
summarise(n = n())
View(aa)
aa = datos_alpha_split %>%
group_by(Dataset, alpha) %>%
summarise(n = n())
View(aa)
# Friedman test
friedman.test(accuracy_mean_mean ~ split |Dataset,datos_alpha_split)
datos_alpha_split
aa = datos_alpha_split %>%
group_by(Dataset, split) %>%
summarise(n = n())
aa
View(aa)
datos_alpha_split <- datos %>% group_by(Dataset, alpha, split) %>%  # Agrupar por las demás variables
summarise(accuracy_mean_mean = mean(accuracy_mean_mean))
datos_alpha_split
datos_alpha_split <- datos_alpha_split %>%
convert_as_factor(Dataset, alpha, split)
datos_alpha_split
str(datos_alpha_split)
datos_alpha_split<- as.data.frame(datos_alpha_split)
datos_alpha_split
# Friedman test
friedman.test(accuracy_mean_mean ~ split |Dataset,datos_alpha_split)
i = "alpha14-split28"
datos_a = datos[datos$combo_alpha_split==i,]
datos_a
str(datos_alpha_split)
res.fried <- datos_alpha_split %>% friedman_test(accuracy_mean_mean ~ split |Dataset)
with(accuracy_mean_mean, table(Dataset, split))
with(datos_alpha_split, table(Dataset, split))
# Friedman test
friedman.test(accuracy_mean_mean ~ split |Dataset,data=datos_alpha_split)
# Friedman test
friedman.test(accuracy_mean_mean ~ split |Dataset,data=as.matrix(datos_alpha_split))
pwc2 <- datos_alpha_split %>%
wilcox_test(accuracy_mean_mean ~ split, paired = TRUE, p.adjust.method = "bonferroni")
pwc2
View(pwc2)
datos
pairwise.wilcox.test(datos$accuracy_mean_mean, datos$split, paired = TRUE, p.adjust.method = "holm")
library(PMCMRplus)
posthoc.friedman.conover.test(accuracy_mean_mean ~ split | Dataset, data = datos, p.adjust.method = "bonferroni")
posthoc.friedman.nemenyi.test(accuracy_mean_mean ~ split | Dataset, data = datos)
library(PMCMRplus)
posthoc.friedman.conover.test(accuracy_mean_mean ~ split | Dataset, data = datos, p.adjust.method = "bonferroni")
posthoc.friedman.nemenyi.test(accuracy_mean_mean ~ split | Dataset, data = datos)
datos_alpha_split <- datos %>% group_by(Dataset, alpha, split) %>%  # Agrupar por las demás variables
summarise(accuracy_mean_mean = mean(accuracy_mean_mean),
accuracy_median_mean = mean(accuracy_mean_median),
accuracy_std_mean = mean(accuracy_mean_std))
datos_alpha_split <- datos_alpha_split %>%
convert_as_factor(Dataset, alpha, split)
datos_alpha_split<- as.data.frame(datos_alpha_split)
str(datos_alpha_split)
friedman.test(accuracy_median_mean ~ split |Dataset,data=as.matrix(datos_alpha_split))
pwc2_median <- datos_alpha_split %>%
wilcox_test(accuracy_median_mean ~ split, paired = TRUE, p.adjust.method = "bonferroni")
View(pwc2_median)
pwc2_std <- datos_alpha_split %>%
wilcox_test(accuracy_std_mean ~ split, paired = TRUE, p.adjust.method = "bonferroni")
View(pwc2_std)
dif_no_sig_mean <- read.csv('CDB_cycles_ParametersComboAlphaSplit_dif_no_signif_cycles_mean.csv')
print(dif_no_sig_mean)
View(dif_no_sig_mean)
# Friedman test
friedman.test(accuracy_mean_mean ~ alpha |Dataset,data=as.matrix(datos_alpha_split))
friedman.test(accuracy_median_mean ~ alpha |Dataset,data=as.matrix(datos_alpha_split))
res.fried <- datos_alpha_split %>% friedman_test(accuracy_mean_mean ~ alpha |Dataset)
pwc2_media <- datos_alpha_split %>%
wilcox_test(accuracy_mean_mean ~ alpha, paired = TRUE, p.adjust.method = "bonferroni")
View(pwc2_media)
pwc2_median <- datos_alpha_split %>%
wilcox_test(accuracy_median_mean ~ alpha, paired = TRUE, p.adjust.method = "bonferroni")
View(pwc2_median)
pwc2_std <- datos_alpha_split %>%
wilcox_test(accuracy_std_mean ~ alpha, paired = TRUE, p.adjust.method = "bonferroni")
View(pwc2_std)
dif_no_sig_mean <- read.csv('CDB_cycles_ParametersComboAlphaSplit_dif_no_signif_cycles_mean.csv')
head(dif_no_sig_mean)
